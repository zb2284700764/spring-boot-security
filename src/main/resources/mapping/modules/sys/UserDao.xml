<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.modules.sys.dao.UserDao">
    <resultMap id="BaseResultMap" type="User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="login_flag" property="loginFlag" jdbcType="CHAR"/>
        <result column="create_by" property="createBy.id" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy.id" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="del_flag" property="delFlag" jdbcType="CHAR"/>
    </resultMap>

    <sql id="userColumns">
		a.id AS 'id',
		a.username AS 'username',
		a.password AS 'password',
		a.name AS 'name',
		a.login_flag AS 'loginFlag',
		a.last_login_time AS 'lastLoginTime',
		a.create_by AS 'createBy.id',
		a.create_date AS 'createDate',
		a.update_by AS 'updateBy.id',
		a.update_date AS 'updateDate',
		a.remarks AS 'remarks',
		a.del_flag AS 'delFlag'
	</sql>

    <!-- 通过username 获取用户 -->
    <select id="getUserByUsername" resultType="User">
        SELECT
        <include refid="userColumns"/>
        FROM sys_user a
        <where>
            username =#{username}
        </where>
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="User">
        insert into sys_user(
            id,
            username,
            password,
            name,
            login_flag,
            last_login_time,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag
        ) values (
            #{id},
            #{username},
            #{password},
            #{name},
            #{loginFlag},
            #{lastLoginTime},
            #{createBy.id},
            #{createDate},
            #{updateBy.id},
            #{updateDate},
            #{remarks},
            #{delFlag}
        )
    </insert>

    <update id="update">
        update sys_user set u
        pdate_by = #{updateBy.id},
        update_date = #{updateDate}
        <if test="password != null and password != ''">
            ,password = #{password}
        </if>
        <if test="name != null and name != ''">
            ,name = #{name}
        </if>
        <if test="loginFlag != null and loginFlag != ''">
            ,login_flag = #{loginFlag}
        </if>
        <if test="lastLoginTime != null and lastLoginTime != ''">
            ,last_login_time = #{lastLoginTime}
        </if>
        <where>
            id = #{id}
        </where>

    </update>


    <!-- 查询所有用户 -->
    <select id="findAllUser" resultType="User">
        SELECT
        <include refid="userColumns"/>
        FROM sys_user a
    </select>

</mapper>